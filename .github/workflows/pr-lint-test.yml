name: "Lint & Test PR"

on:
    pull_request_target:

permissions:
    pull-requests: read

jobs:
    tests:
        name: Pint, Rector & Test
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ ubuntu-latest ]
                php: [ 8.3 ]
        steps:
            -   name: Checkout Latest Codebase
                uses: actions/checkout@v5
                with:
                    ref: ${{ github.event.pull_request.head.ref }}
                    repository: ${{ github.event.pull_request.head.repo.full_name }}
                    fetch-depth: 0

            -   name: "Check PR title"
                uses: amannn/action-semantic-pull-request@v5
                env:
                    GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    ini-values: error_reporting=E_ALL
                    tools: composer:v2
                    coverage: xdebug
                    extensions: fileinfo, mbstring, intl

            -   name: Install full FFmpeg
                run: |
                    sudo apt-get update
                    sudo apt-get install -y ffmpeg libavcodec-extra

            -   name: Install dependencies
                run: |
                    composer install --no-interaction --prefer-dist --optimize-autoloader --no-ansi --no-progress

            -   name: "Run Rector"
                run: |
                    ./vendor/bin/rector process --dry-run --config=rector.php

            -   name: "Run Pint"
                run: |
                    ./vendor/bin/pint --config=pint.json --test --verbose --dirty

            -   name: "Run Tests"
                run: |
                    ./vendor/bin/pest --colors=always --stop-on-failure --coverage --coverage-clover=coverage.xml --ci

            -   name: "SonarQube Scan"
                uses: SonarSource/sonarqube-scan-action@v4
                env:
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
